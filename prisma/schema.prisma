// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String
  presences     Presences[]
  password      String
  ClassStudents ClassStudents[]

  @@map("tb_students")
}

model Teacher {
  id        Int         @id @default(autoincrement())
  name      String
  email     String      @unique
  presences Presences[]
  Class     Class[]

  @@map("tb_teachers")
}

model Presences {
  id        Int      @id @default(autoincrement())
  classId   Int
  startsAt  DateTime
  endAt     DateTime
  class     Class    @relation(fields: [classId], references: [id])
  student   Student? @relation(fields: [studentId], references: [id])
  studentId Int?
  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?

  @@map("tb_presences")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  @@map("tb_users")
}

model Class {
  id            Int             @id @default(autoincrement())
  teacher       Teacher         @relation(fields: [teacherId], references: [id])
  teacherId     Int
  startsAt      DateTime
  endsAt        DateTime
  ClassStudents ClassStudents[]
  Presences     Presences[]

  @@map("tb_classes")
}

model ClassStudents {
  class     Class   @relation(fields: [classId], references: [id])
  classId   Int
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  @@id([classId, studentId])
}
